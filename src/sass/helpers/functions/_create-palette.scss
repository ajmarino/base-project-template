/**
 * Function defining the difference between 2 colors and the color functions required to turn
 * color $a into color $b.
 *
 * @access private
 *
 *
 * @group Color Palette
 * 
 * 
 * @param {Color} $a - first color
 * @param {Color} $b - second color
 *
 * @return {Map}  The color operations to transform $a to $b, with corresponding values
 */
@function color-diff($a, $b) {
  $sat: saturation($a) - saturation($b);
  $lig:  lightness($a) -  lightness($b);
  $fn-sat: if($sat > 0, 'desaturate', 'saturate');
  $fn-lig: if($lig > 0, 'darken', 'lighten');
  
  @return (
    adjust-hue: -(hue($a) - hue($b)),
    #{$fn-sat}: abs($sat),
    #{$fn-lig}: abs($lig)
  );
}
 




/**
 * Compute the diff for each color from the initial palette.
 *
 * @access private
 *
 * @group Color Palette
 * 
 * @param {Map} $palette - palette
 *
 * @requires {function} color-diff
 * 
 * @return {List} List of diffs to apply to turn 1 color into another
 */
@function palette-diff($palette) {
  $base: map-get($palette, "base");
  $colors: map-get($palette, "colors");
  
  $diffs: ();
  
  @each $color in $colors {
    $diffs: append($diffs, color-diff($base, $color));
  }
  
  @return $diffs;
}



/**
 * Palette of diffs based on colors in `$base-palette:colors`.
 *
 * @access private
 *
 * @group Color Palette
 * 
 * @type List
 */
$palette-diffs: palette-diff($base-palette);





/**
 * Apply differences returned from `color-diff` function to a color in order to create the second color.
 *
 * @access private
 *
 * @group Color Palette
 * 
 * @param {Color} $color - color to transform
 * @param {Map} $diff - diff map
 * 
 * @return {Color} Transformed color
 */
@function apply-diff($color, $diff) {
  // We call the $key (function), 
  // passing the $color and the $value as parameters
  // e.g. `call(adjust-hue, #BADA55, 42)`
  @each $key, $value in $diff {
    $color: call($key, $color, $value);
  }
  
  @return $color;
}

/**
 * Create a 6 color palette, 3 darker 3 lighter, from a base color.
 *
 * @access private
 *
 * @group Color Palette
 * 
 * @param {Color} $base-color - base color for the palette
 *
 * @requires {function} palette-diff
 * @requires {function} apply-diff
 * @requires {variable} $base-palette
 *
 * 
 * @return {List} List of colors
 */
@function create-palette($base-color) {
  $colors: ();
  
  @each $diff in $palette-diffs {
    $colors: append($colors, apply-diff($base-color, $diff));
  }
  
  @return $colors;
}



/**
 * Create a list of colors from the base color then turn it into a map with explicit keys.
 * <br>See `Color Palette` group, `get_` functions
 *
 * @param {Color} $base-color - base color for the palette
 *
 * @group Color Palette
 *
 * @link http://www.sitepoint.com/using-sass-build-color-palettes/
 * 
 * @requires {function} create-palette
 *
 * @return {Map}
 */
@function create-named-palette($base-color) {
  $palette-colors: create-palette($base-color);
  // Keys need to be same length as colors in $base-pallet
  $keys: 'lightest' 'lighter' 'light' 'base' 'dark' 'darker' 'darkest';
  $palette: ();

  @for $i from 1 through min(length($palette-colors), length($keys)) {
    $palette: map-merge($palette, (nth($keys, $i): nth($palette-colors, $i)));
  }

  @return $palette;
}