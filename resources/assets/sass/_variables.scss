///
/// Enable layout debugging
/// 
/// @group Debug
/// 
/// @link http://pesticide.io/
/// 
$pesticide-debug-outline: false;
$pesticide-debug-depth: false;





/// 
/// Enable Namespace visual debugging
/// 
/// @group Debug
/// 
/// @link http://csswizardry.com/2015/03/more-transparent-ui-code-with-namespaces/
/// 
$namespace-debug: false;



/// 
/// Sets the active theme name
/// 
/// @group Styling
/// 
/// @link https://smacss.com/book/type-theme
/// 
$theme: "default" !default;



/// 
/// Breakpoints for responsive design, any name/ pair can go here.
/// <br>See `breakpoint` mixin under `Styling`
/// 
/// @group Site Styles
/// 
$breakpoints: (
	"tablet"  : (min-width: 48em), // 768px
	"laptop"  : (min-width: 62em), // 992px
	"desktop" : (min-width: 75em)  // 1200px
);




/// 
/// Base heading sizes, set in px and converted to rem with px fallback.
/// 
/// @group Site Styles
/// 
$headings : (
	"h1" : 48px,
	"h2" : 36px,
	"h3" : 30px,
	"h4" : 24px,
	"h5" : 20px,
	"h6" : 18px
);
$typecsset-h1-size: map-get($headings, "h1") !default;
$typecsset-h2-size: map-get($headings, "h2") !default;
$typecsset-h3-size: map-get($headings, "h3") !default;
$typecsset-h4-size: map-get($headings, "h4") !default;
$typecsset-h5-size: map-get($headings, "h5") !default;
$typecsset-h6-size: map-get($headings, "h6") !default;

// Would you like to show a baseline grid? This is handy during development.
$typecsset-show-baseline: true;





/// 
/// Font Stacks
/// <br>See `ff` mixin under `Styling`
/// 
/// @group Site Styles
/// 
$font-stacks : (
	"Default Sans"  : ("source-sans-pro", "Helvetica Neue", Helvetica, Arial, sans-serif),
	"Default Serif" : ("source-serif-pro", Georgia, "Times New Roman", Times, serif),
	"Monospace"     : ("source-code-pro","Inconsolata", "Menlo", Consolas, "Andale Mono WT", "Andale Mono", "Lucida Console",
                                "Lucida Sans Typewriter", "DejaVu Sans Mono", "Bitstream Vera Sans Mono", "Liberation Mono", "Nimbus Mono L",
                                Monaco, "Courier New", Courier, monospace),

	"Helvetica"     : (Helvetica, Arial, sans-serif),
);



// Color Scheme
// examples based on the official Sass styleguide
// ============
// Descriptive colors:
$c-hopbush         : #c69;
$c-bouquet         : #b37399;
$c-venus           : #998099;
$c-patina          : #699;
$c-nebula          : #d2e1dd;
$c-white           : #fff;
$c-dawn-pink       : #f2ece4;
$c-wafer           : #e1d7d2;
$c-iron            : #dadbdf;
$c-regent-grey     : #808c99;
$c-pale-sky        : #6b717f;
$c-midnight-blue   : #036;
$c-black           : #000;

// Messages
$c-message         : #f4ecbb !default;
$c-important       : #d00 !default;
$c-notice          : #66b !default;
$c-success         : #5cb85c !default;
$c-info            : #5bc0de !default;
$c-warning         : #f0ad4e !default;
$c-danger          : #d9534f !default;

/// 
/// Colors used thoughout the site using meaningful names, colors set using `$c-name` are defined above sass this map in `_variables.scss`.
/// <br>See `c` mixin under `Styling`
/// 
/// @group Site Styles
/// 
$site-colors : (
	"main-bg" : $c-white,
);




/// 
/// Sizes array for various dimensions
/// <br>See `s` mixin to under `Styling` 
/// 
/// @group Site Styles
/// 
$sizes: (
	"main-content-width" : 75%,
);





/// 
/// Various transitions, defined by usage name or by properties effected
/// <br>See `trans` mixin under `Styling`
/// 
/// @group Site Styles
/// 
$transitions : (
	"all"    : all 0.3s linear,
	"border" : border 0.3s linear,
	"width"  : width 0.5s ease-in-out,
	"color"  : color 0.3s linear,
);





/// 
/// Assigns stacking order to items from one place, assigned with meaningful names.
/// <br>See `z` mixin under `Styling`
/// 
/// @group Site Styles
/// 
$z-layers: (
	"main-container"     : 1,

	"debug" : 1000,
);

